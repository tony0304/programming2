        -:    0:Source:main.c
        -:    0:Graph:main.gcno
        -:    0:Data:main.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include <stdio.h> // main.c
        -:    2:#include <math.h>
        -:    3:#include <assert.h>
        -:    4:
function computeBMI called 4 returned 100% blocks executed 100%
        4:    5:double computeBMI(int kg, int height)
        -:    6:{
        4:    7:    double BMI = 0.0, M = height/100.0;
        4:    8:    if (kg<=0 || height<=0) return 0;
branch  0 taken 3 (fallthrough)
branch  1 taken 1
branch  2 taken 0 (fallthrough)
branch  3 taken 3
        3:    9:    BMI = round(100*kg/(M*M))/100; //四捨五入取兩位小數
        3:   10:    if (BMI <18.5) return -1;
branch  0 taken 1 (fallthrough)
branch  1 taken 2
        2:   11:    if (BMI >24) return -2;
branch  0 taken 1 (fallthrough)
branch  1 taken 1
        1:   12:    return BMI;
        -:   13:}
        -:   14:
function main called 1 returned 100% blocks executed 89%
        1:   15:int main()
        -:   16:{
        1:   17:    int kg = 52, height = 155;
        1:   18:    double expectedResult = 21.64f;
        1:   19:    double result = computeBMI(kg, height);
call    0 returned 1
        -:   20:    // int t1 = 0, t2 = 0;
        1:   21:    double temp1 = computeBMI(0, 0);
call    0 returned 1
        1:   22:    double temp2 = computeBMI(40, 180);
call    0 returned 1
        1:   23:    double temp3 = computeBMI(200, 180);
call    0 returned 1
        -:   24:    // double temp = computerBMI(0, 0);
        1:   25:    assert(fabs(result-expectedResult)<0.0001);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
call    2 never executed
        1:   26:    printf("Hi\n");
call    0 returned 1
        1:   27:    return 0;
        -:   28:}
